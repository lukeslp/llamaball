/home/html/alt/dev/scripts/services/api.service.js
```js
class ApiService {
    constructor() {
        // Proxy endpoint for x.ai alt text
        this.primaryEndpoint = "http://localhost:1131/vision";
        // Fallback to same proxy if primary fails (no separate fallback defined)
        this.fallbackEndpoint = "http://localhost:1131/vision";
        this.defaultModel = AppConfig.api.defaultModel;
    }

    async testConnection() {
        try {
            // Check health endpoint of the alt_proxy service
            const response = await fetch("http://localhost:1131/health", {
                method: 'GET'
            });
            
            return response.ok;
        } catch (error) {
            console.error('Connection test failed:', error);
            return false;
        }
    }

    // ... other methods ...
}
```

/home/html/alt/dev/scripts/services/stream.service.js
```js
/*
 * StreamService handles Server-Sent Events (SSE) streaming.
 */

// NOTE: The alt_proxy.py Flask service exposes the streaming endpoint at /vision.
//       This StreamService handles SSE from that endpoint, expecting x.aiâ€“style chunks.

// ... existing code ...
```
